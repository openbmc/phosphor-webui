{
  "comments": [
    {
      "key": {
        "uuid": "a14e088b_b3c58c4e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-24T17:22:36Z",
      "side": 1,
      "message": "I like toast.",
      "range": {
        "startLine": 10,
        "startChar": 88,
        "endLine": 10,
        "endChar": 93
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63ed1961_7dd68054",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2019-10-24T18:13:10Z",
      "side": 1,
      "message": "Haven\u0027t been super strict with this, but can you follow the 50/72 rule for commit msgs. \n50 chars for the subject line / 72 chars for the body of the commmit msg. \n\nhttps://chris.beams.io/posts/git-commit/\n    Separate subject from body with a blank line\n    Limit the subject line to 50 characters\n    Capitalize the subject line\n    Do not end the subject line with a period\n    Use the imperative mood in the subject line\n    Wrap the body at 72 characters\n    Use the body to explain what and why vs. how",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a9a3ce4_6bb3a145",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2019-10-24T19:15:17Z",
      "side": 1,
      "message": "Mira, the easiest way to do this is to use VS Code to create the message. It will alert you when you have gone over and then you can just paste into the terminal window when the commit message is shown.",
      "parentUuid": "63ed1961_7dd68054",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00a7eda9_96acdd3b",
        "filename": "app/common/services/api-utils.js",
        "patchSetId": 2
      },
      "lineNbr": 525,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2019-10-23T19:45:26Z",
      "side": 1,
      "message": "This does the same thing updateUser does. Should we reuse that?",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92b4f741_b51e5575",
        "filename": "app/common/services/api-utils.js",
        "patchSetId": 2
      },
      "lineNbr": 525,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-24T17:22:36Z",
      "side": 1,
      "message": "FYA, if the session has PasswordChangeRequired, the underlying REST API (PATCH /redfish/v1/AccountService/Accounts/\u003cuser\u003e) only allows the \"Password\" property to be updated.  I am not familiar with the updateUser function; if it limits itself to supplying only the \"Password\" property, then using should be okay.",
      "parentUuid": "00a7eda9_96acdd3b",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc0dfbf2_02b13fc3",
        "filename": "app/common/services/userModel.js",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2019-10-23T19:45:26Z",
      "side": 1,
      "message": "Any thougths on refactoring this?\nMaybe a future commit?",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0610747d_0e82667a",
        "filename": "app/common/services/userModel.js",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-24T17:22:36Z",
      "side": 1,
      "message": "This ought to check the content of the extendedMessage field.  For example, check if the message begins with: \"The password for this account must be changed\"...\nOn the other hand, the extendedMessage is only used for this one purpose, and is not likely to have any other content.  I would prefer to see this check added, but will allow the code as-is.\n\nWhen the webui switches over to Redfish (but not now!), this code will need to change .  It will need to check for the Redfish message like:\nif (response.data[\"@Message.ExtendedInfo\"][\"MessageId\"] ends with \"PasswordChangeRequired\")",
      "parentUuid": "cc0dfbf2_02b13fc3",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3be13528_3cea4a4d",
        "filename": "app/common/services/userModel.js",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2019-10-24T18:48:18Z",
      "side": 1,
      "message": "I realize Redfish isn\u0027t important now, but it would be much nicer to have an ID for us to determine what the extended message is for. It\u0027s great that we are sending a message from the backend for this, e.g. \"The password for this account must be changed\", if we are expecting to display it to the user in the GUI. If so, we couldn\u0027t change the message without having to update the check. Also, we will be adding language translation and may need to map these extended messages to strings that we can translate on the client-side. \n\nIf the extended message is not supposed to a message that is displayed to the user and is just to indicate the password needs to be changed, seems like the string could be shortened to remove any possibility for typo errors, i.e. I like PasswordChangeRequired. :)",
      "parentUuid": "0610747d_0e82667a",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "775ca9ec_2a5924a5",
        "filename": "app/common/services/userModel.js",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-25T19:32:12Z",
      "side": 1,
      "message": "Agreed.  A message id (such as PasswordChangeRequired) would have been nice.  The design is re-opened for review, here: https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/25413/2/designs/expired-password.md#178\n\nHowever, I understand the /login URI is deprecated, and the webui is moving to use Redfish SessionService for an upcoming release.  IMHO we should just keep the code on line 21 as-is.",
      "parentUuid": "3be13528_3cea4a4d",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e704a2c8_fc5ef49a",
        "filename": "app/common/services/userModel.js",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2019-10-24T18:48:18Z",
      "side": 1,
      "message": "If extendedMessage is included and has a value, we should take advantage of this being truthy/falsy and use the  following if block:\n\nif (response.data[\u0027extendedMessage\u0027]) {...}\n\nThis will return false if the extendedMessage property is not defined or if it is defined, but is an empty string. In the implemented if block, we are asking if the value is defined by testing if it is NOT undefined, which is harder to follow.",
      "range": {
        "startLine": 21,
        "startChar": 11,
        "endLine": 21,
        "endChar": 63
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26b846a5_84d932b8",
        "filename": "app/common/styles/base/forms.scss",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2019-10-24T19:12:58Z",
      "side": 1,
      "message": "The format should be to stack grouped selectors\n\n#login__form,\n#expiredPassword__form {...}\n\nAlso, naming convention is not to use cameCase in selector naming. Can we update to #expired-password__form.\n\nBased on the BEM syntax, it would appear there is an expiredPassword Block level element that contains a form. If that is not true, I would rename to expired-password-form.\n\nWhy are we using an id selector rather than a class selector? It is a best practice to avoid styling id\u0027s. I see it throughout the app, but we shouldn\u0027t continue that practice.",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 131,
        "endChar": 38
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78d917f6_400b85df",
        "filename": "app/index.html",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2019-10-24T19:12:58Z",
      "side": 1,
      "message": "Roll this back once you have converted to using a page alert instead of a toast message.",
      "range": {
        "startLine": 17,
        "startChar": 4,
        "endLine": 17,
        "endChar": 19
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ac99b56_b90b8bb1",
        "filename": "app/login/controllers/login-controller.html",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2019-10-23T15:20:11Z",
      "side": 1,
      "message": "delete",
      "range": {
        "startLine": 25,
        "startChar": 12,
        "endLine": 25,
        "endChar": 67
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba57696e_24e52c1a",
        "filename": "app/login/controllers/login-controller.html",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2019-10-24T19:12:58Z",
      "side": 1,
      "message": "Unless we are targeting the DOM node using the id, we can change this to a class element. I \"think\" the only purpose of this is to associate CSS styles. If that is true, I would change the id attribute to a class attribute and update the naming since we don\u0027t use cameCase naming for selectors. Also, I don\u0027t see an expiredPassword block level containers, so this form is the block and the the element. BEM (Block, Element, Modifier) naming convention indicates this is a child element of a block container titled expiredPassword and I don\u0027t believe that is true. \n\nI suggest changing the value to expired-password-form.",
      "range": {
        "startLine": 45,
        "startChar": 15,
        "endLine": 45,
        "endChar": 37
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21cb5d40_9ce0de67",
        "filename": "app/login/controllers/login-controller.html",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1000396
      },
      "writtenOn": "2019-10-23T15:28:11Z",
      "side": 1,
      "message": "typo in class name",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1fd35b4_0d0d96f4",
        "filename": "app/login/controllers/login-controller.html",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2019-10-23T15:20:11Z",
      "side": 1,
      "message": "I think these values are dynamic? can we show this here?",
      "range": {
        "startLine": 62,
        "startChar": 10,
        "endLine": 62,
        "endChar": 76
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbb100f8_5b57216c",
        "filename": "app/login/controllers/login-controller.html",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2019-10-23T15:20:11Z",
      "side": 1,
      "message": "maybe add a message when passwords don\u0027t match. Also not sure the other validations are needed here as long as the new password field is valid and this input matches",
      "range": {
        "startLine": 81,
        "startChar": 10,
        "endLine": 85,
        "endChar": 16
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46087028_976493ec",
        "filename": "app/login/controllers/login-controller.html",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-24T17:22:36Z",
      "side": 1,
      "message": "I agree with this comment.",
      "parentUuid": "dbb100f8_5b57216c",
      "range": {
        "startLine": 81,
        "startChar": 10,
        "endLine": 85,
        "endChar": 16
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81d171f9_8f1f88c1",
        "filename": "app/login/controllers/login-controller.js",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2019-10-24T19:12:58Z",
      "side": 1,
      "message": "We don\u0027t need the toast service on this page any longer.",
      "range": {
        "startLine": 22,
        "startChar": 8,
        "endLine": 22,
        "endChar": 20
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c77e93b4_bfa983d0",
        "filename": "app/login/controllers/login-controller.js",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2019-10-23T19:45:26Z",
      "side": 1,
      "message": "I would recommend:\n\n// If the password is expired\nif (!isPasswordValid) {\n\n}\nelse if (status) {\n\n\n}",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a084d3b_7723f253",
        "filename": "app/login/controllers/login-controller.js",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2019-10-24T19:12:58Z",
      "side": 1,
      "message": "I agree and also, I am wondering if isPasswordValid the right name. If we are checking if the password is expired, would it be better to name the parameter isPasswordExpired?",
      "parentUuid": "c77e93b4_bfa983d0",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "034ef21e_1dcae2ec",
        "filename": "app/login/controllers/login-controller.js",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-25T19:32:12Z",
      "side": 1,
      "message": "FYA, Redfish started calling this condition passwordExpired and changed it to the more generic term PasswordChangeRequired.  Going forward, that\u0027s what the Redfish APIs will tell us.\n\nHowever, OpenBMC currently only has passwordExpired which maps to PasswordChangeRequired.  This will only become important if we ever have another way to induce the PasswordChangeRequired condition.",
      "parentUuid": "9a084d3b_7723f253",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb0bdb09_0c597083",
        "filename": "app/login/controllers/login-controller.js",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2019-10-23T15:20:11Z",
      "side": 1,
      "message": "Are you checking the form is valid before making the call to change password? The markup doesn\u0027t seem to disable the submit button and there are no checks here",
      "range": {
        "startLine": 65,
        "startChar": 5,
        "endLine": 65,
        "endChar": 42
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f718e86f_bacca9b0",
        "filename": "app/login/controllers/login-controller.js",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2019-10-23T15:20:11Z",
      "side": 1,
      "message": "I haven\u0027t tested the flow in the GUI, but are we redirecting the user back to login or logging them into the server overview?",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19014db3_e3a9a095",
        "filename": "app/login/controllers/login-controller.js",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2019-10-24T19:12:58Z",
      "side": 1,
      "message": "Redirecting to login is what I saw in the demo",
      "parentUuid": "f718e86f_bacca9b0",
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35053228_926e7ecc",
        "filename": "app/login/controllers/login-controller.js",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2019-10-23T15:20:11Z",
      "side": 1,
      "message": "Is there anyway to map backend error here to a more useful message in the GUI? this seems like an important part of the flow to provide meaningful feedback",
      "range": {
        "startLine": 78,
        "startChar": 14,
        "endLine": 78,
        "endChar": 63
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb3b0bea_f59f4071",
        "filename": "app/login/controllers/login-controller.js",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-24T17:22:36Z",
      "side": 1,
      "message": "Sorry, at this time the change password REST API is not able to provide any details about what went wrong.  I\u0027ve noted this in https://github.com/openbmc/bmcweb/issues/103 but we might want more focus on this.",
      "parentUuid": "35053228_926e7ecc",
      "range": {
        "startLine": 78,
        "startChar": 14,
        "endLine": 78,
        "endChar": 63
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "934f2acb_2f02dd21",
        "filename": "app/login/controllers/login-controller.js",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2019-10-24T19:12:58Z",
      "side": 1,
      "message": "We do need to remove the toast and replace with an alert.",
      "parentUuid": "bb3b0bea_f59f4071",
      "range": {
        "startLine": 78,
        "startChar": 14,
        "endLine": 78,
        "endChar": 63
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd36d8c9_17afce5c",
        "filename": "app/login/controllers/login-controller.js",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2019-10-23T15:20:11Z",
      "side": 1,
      "message": "remove?",
      "range": {
        "startLine": 80,
        "startChar": 12,
        "endLine": 80,
        "endChar": 31
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49d2d68b_27aa3a08",
        "filename": "app/login/styles/index.scss",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2019-10-23T15:20:11Z",
      "side": 1,
      "message": "classname?",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 66,
        "endChar": 7
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "821f8e65_68ce30a0",
        "filename": "app/login/styles/index.scss",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2019-10-24T19:12:58Z",
      "side": 1,
      "message": ".expired-password-error\n\n.login__password-expired-host",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 76,
        "endChar": 2
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68c3c1f0_4dbd9741",
        "filename": "app/login/styles/index.scss",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2019-10-24T19:12:58Z",
      "side": 1,
      "message": "Resolve any use of camelCase in the naming and validate the BEM naming, please. :)\n\n.expired__password__status-icon means status-icon is an Element of password, which is an Element of expired. I suggest expired-password-status-icon.",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 128,
        "endChar": 1
      },
      "revId": "a6ebda2fe1825b966c2c8592043c55ee58c85017",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}