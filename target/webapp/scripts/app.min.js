window.angular&&function(angular){"use strict";angular.module("app",["ngRoute","app.constants","app.templates","app.vendors","app.common.services","app.common.directives","app.common.filters","app.login","app.overview"]).config(["$routeProvider","$locationProvider",function($routeProvider,$locationProvider){$locationProvider.hashPrefix(""),$routeProvider.otherwise({redirectTo:"/login"})}]).config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push("apiInterceptor")}]).run(["$rootScope","$location","dataService","userModel",function($rootScope,$location,dataService,userModel){$rootScope.dataService=dataService,dataService.path=$location.path(),$rootScope.$on("$routeChangeStart",function(event,next,current){null!=next.$$route&&void 0!=next.$$route&&(next.$$route.authenticated&&(userModel.isLoggedIn()||$location.path("/login")),"/"!=next.$$route.originalPath&&"/login"!=next.$$route.originalPath||userModel.isLoggedIn()&&(current&&current.$$route?$location.path(current.$$route.originalPath):$location.path("/overview/system")))}),$rootScope.$on("$locationChangeSuccess",function(event){var path=$location.path();dataService.path=path,["/","/login","/logout"].indexOf(path)==-1?dataService.showNavigation=!0:dataService.showNavigation=!1}),$rootScope.$on("timedout-user",function(){sessionStorage.removeItem("LOGIN_ID"),$location.path("/login")})}])}(window.angular);
angular.module('app.templates', []).run(['$templateCache', function($templateCache) {$templateCache.put('common/directives/app-header.html','<div id="header__wrapper">\n<!-- HEADER -->\n<!-- Class of status-light__good has 3 states: status-light__good, status-light__error, status-light__disabled -->\n<!-- Server Power buttton links to \'server power operations\' page; Server Status may link to event log page. TBD.-->\n<header id="header">\n    <span class="app__version float-left">{{dataService.app_version}}</span>\n    <a href="" class="header__logout" ng-click="logout()">Log out</a>\n</header>\n<div class="header__functions-wrapper" role="heading">\n    <div class="logo__wrapper"><img src="assets/images/logo.svg" id="header__logo"  alt="company logo"/></div>\n    <button id="header__server-name">{{dataService.server_id}}</button>\n    <div class="header__functions">\n        <a href="" id="header__server-health">Server health<span class="status-light__error">{{dataService.server_health}}</span></a>\n        <a href="#/overview/power-operations" class="header__server-power" role="button">Server power<span ng-class="{\'status-light__error\': dataService.server_state == \'Off\', \'status-light__disabled\': dataService.server_state == \'Unreachable\', \'status-light__good\': dataService.server_state == \'Running\', \'status-light__warn\': dataService.server_state == \'Quiesced\'}">{{dataService.server_state}}</span></a>\n        <p class="header__refresh">Page last refreshed <span>{{dataService.last_updated |date:\'h:mm:ss MMM dd yyyy\'}}</span></p>\n        <button class="header__page-refresh" ng-click="refresh()"><img src="assets/images/icon-refresh-white.svg" alt="refresh page" role="button"/></button>\n    </div>\n</div>\n</div>');
$templateCache.put('common/directives/app-navigation.html','<nav>\n    <ul id="nav__top-level" ng-style="navStyle">\n        <li>\n            <button class="btn-overview" ng-class="{opened: firstLevel == \'overview\'}" ng-click="firstLevel = \'overview\';" tabindex="1">\n\n\n                <span class="">Server Overview</span></button>\n        </li>\n        <li>\n            <button class="btn-health" ng-class="{opened: firstLevel == \'health\'}" ng-click="firstLevel = \'health\';" tabindex="9">\n\n                <span>Server Health</span></button>\n        </li>\n        <li>\n            <button class="btn-control" ng-class="{opened: firstLevel == \'control\'}" ng-click="firstLevel = \'control\';">\n\n                <span>Server Control</span></button>\n        </li>\n        <li>\n            <button class="btn-config" ng-class="{opened: firstLevel == \'config\'}" ng-click="firstLevel = \'config\';">\n                <svg class="nav__icon" viewBox="0 0 20 20">\n                    <path class="nav__icon-help__outer" d="M10,0.9c-5,0-9,4-9,9s4,9,9,9s9-4,9-9S14.9,0.9,10,0.9"/>\n                    <path class="nav__icon-help__inner" d="M9.2,5.4V3.7h1.5v1.8H9.2z M9.2,16.1v-9h1.5v9H9.2z"/>\n                </svg>\n                <span>Configuration</span></button>\n        </li>\n        <li>\n            <button class="btn-firmware" ng-class="{opened: firstLevel == \'firmware\'}" ng-click="firstLevel = \'firmware\';">\n                <svg class="nav__icon" viewBox="0 0 20 20">\n                    <path class="nav__icon-help__outer" d="M10,0.9c-5,0-9,4-9,9s4,9,9,9s9-4,9-9S14.9,0.9,10,0.9"/>\n                    <path class="nav__icon-help__inner" d="M9.2,5.4V3.7h1.5v1.8H9.2z M9.2,16.1v-9h1.5v9H9.2z"/>\n                </svg>\n                <span>Firmware</span></button>\n        </li>\n        <li>\n            <button class="btn-users" ng-class="{opened: firstLevel == \'users\'}" ng-click="firstLevel = \'users\';">\n                <svg class="nav__icon" viewBox="0 0 20 20">\n                    <path class="nav__icon-help__outer" d="M10,0.9c-5,0-9,4-9,9s4,9,9,9s9-4,9-9S14.9,0.9,10,0.9"/>\n                    <path class="nav__icon-help__inner" d="M9.2,5.4V3.7h1.5v1.8H9.2z M9.2,16.1v-9h1.5v9H9.2z"/>\n                </svg>\n                <span>Users</span></button>\n        </li>\n    </ul>\n    <ul class="nav__second-level btn-overview" ng-style="navStyle" ng-class="{opened: firstLevel == \'overview\'}">\n        <li ng-class="{\'active\': (path == \'/overview/system\')}" tabindex="2"><a href="#/system-overview">System Overview</a></li>\n\n\n\n\n\n    </ul>\n    <ul class="nav__second-level btn-health" ng-style="navStyle"  ng-class="{opened: firstLevel == \'health\'}">\n        <li ng-class="{\'active\': (path == \'/overview/log\')}"><a href="#/overview/log" tabindex="7">Event Log</a></li>\n        <li><a href="">FRU Information</a></li>\n        <li><a href="">Sensor Data</a></li>\n        <li ng-class="{\'active\': (path == \'/overview/power-consumption\')}"><a href="" tabindex="4">Power consumption</a></li>\n        <li ng-class="{\'active\': (path == \'/overview/unit-id\')}"><a href="#/overview/unit-id" tabindex="6">Unit ID</a></li>\n        <li><a href="">Diagnostics</a></li>\n    </ul>\n    <ul class="nav__second-level btn-control" ng-style="navStyle"  ng-class="{opened: firstLevel == \'control\'}">\n        <li ng-class="{\'active\': (path == \'/overview/power-operations\')}" tabindex="3"><a href="#/overview/power-operations">Server power operations</a></li>\n        <li ng-class="{\'active\': (path == \'/overview/bmc-reboot\')}"><a href="#/overview/bmc-reboot" tabindex="8">Reboot BMC</a></li>\n        <li ng-class="{\'active\': (path == \'/overview/remote-console\')}"><a href="" tabindex="5">Remote console</a></li>\n    </ul>\n    <ul class="nav__second-level btn-firmware" ng-style="navStyle"  ng-class="{opened: firstLevel == \'config\'}">\n        <li><a href="">Network Configuration</a></li>\n        <li><a href="">Date & Time</a></li>\n        <li><a href="">Security</a></li>\n        <li><a href="">Configuration File</a></li>\n    </ul>\n    <ul class="nav__second-level btn-firmware" ng-style="navStyle"  ng-class="{opened: firstLevel == \'firmware\'}">\n        <li><a href="">BMC Firmawre</a></li>\n        <li><a href="">Server Firmware</a></li>\n    </ul>\n    <ul class="nav__second-level btn-users" ng-style="navStyle"  ng-class="{opened: firstLevel == \'users\'}">\n        <li><a href="">Manage User Account</a></li>\n    </ul>\n</nav>');
$templateCache.put('common/directives/confirm.html','<div class="inline__confirm" ng-class="{active: confirm}">\n    <div class="inline__confirm-message">\n        <p class="h3"><i></i>Are you sure you want to <strong>{{title}}?</strong></p>\n        <p>{{message}}</p>\n    </div>\n    <div class="inline__confirm-buttons">\n        <button class="btn-primary" ng-click="accept()">Yes</button>\n        <button class="btn-primary" ng-click="cancel()">No</button>\n    </div>\n</div>');
$templateCache.put('login/controllers/login-controller.html','<div>\n    <div class="row">\n        <div class="columns large-6">\n            <img src="assets/images/logo.svg" class="login__logo" alt="IBM logo" role="img"/>\n        </div>\n        <div class="columns large-6">\n        </div>\n    </div>\n    <div class="row">\n        <div class="columns large-6 login__desc">\n            <h1>OpenBMC Advanced System Management</h1>\n            <ul class="login__server-info">\n                <li><p class="login__info-label">Build version</p><p>X.XX.XXX</p></li>\n                <li><p class="login__info-label">Server ID</p><p>XXXXXXXXXXXXXXXX</p></li>\n                <li><p class="login__info-label">Server model</p><p>Power XX-XXXXX</p></li>\n                <!-- ping server to see if powered on. Change status-light and txt accordingly. Status message is planned to be hardcoded message were isplay via local JS.  -->\n                <li><p class="login__info-label">Server power</p><p class="status-light__disabled">Indeterminate</p></li>\n                <li><p class="login__info-label">Status message</p><!--<p>BMC was reset by user</p>--></li>\n            </ul>\n        </div>\n        <div class="columns large-6 disabled">\n            <form id="login__form" role="form" action="" >\n                <label for="username">Username</label>\n                <input type="text" id="username" name="username" required ng-model="username" ng-class="{error: error}" ng-keydown="tryLogin(username, password, $event)" ng-disabled="dataService.loading">\n\n                <label for="password">Password</label>\n                <input type="password" id="password" name="password" class="" required ng-model="password" ng-keydown="tryLogin(username, password, $event)" ng-disabled="dataService.loading">\n\n                <input id="login__submit" class="btn-primary submit" type="button" value="Log in" role="button" ng-click="login(username, password)" ng-class="{error: error}" ng-disabled="dataService.loading">\n\n                <p class="login__error-msg" role="alert" ng-if="error">Incorrect username or password</p>\n                <p class="login__error-msg" role="alert" ng-if="dataService.server_unreachable">Server Unreachable</p>\n            </form>\n        </div>\n    </div>\n</div>');
$templateCache.put('overview/controllers/bmc-reboot-controller.html','<div id="bmc-reboot">\n    <div class="row column">\n        <h1>Reboot BMC</h1>\n    </div>\n\n    <div class="row column  btm-border-grey">\n        <span class="bmc-reboot__status-log inline">BMC last reboot at {{dataService.last_updated |date:\'h:mm:ss on MM/dd/yyyy\'}}</span>\n    </div>\n\n    <div class="row column btm-border-grey bmc-reboot-option"\n         ng-class="{disabled: confirm || dataService.loading, transitionAll: confirm}">\n        <ul>\n            <li>Rebooting the BMC causes your browser to lose contact with the BMC for several minutes.</li>\n            <li>When the BMC software has started, you can then log in again.</li>\n            <li>If the Log In button is not enabled after several minutes, you may need to point your browser to the\n                BMC\u2019s address and log in again.\n            </li>\n        </ul>\n        <button id="bmc__reboot" class="btn-secondary" ng-click="rebootConfirm()"><i>&#x21BB</i> Reboot BMC\n        </button>\n        <confirm title="Reboot the BMC"\n                 message="Rebooting the BMC causes your browser to lose contact with the BMC for several minutes."\n                 confirm="confirm"\n                 ng-show="confirm"\n                 callback="reboot"></confirm>\n    </div>\n</div>\n');
$templateCache.put('overview/controllers/log-controller.html','<div id="event-log">\n\n<div class="row column">\n    <h1>Event Log</h1>\n</div>\n\n<!-- Current status and bar display the state of the server. Class \'power__state-off\' is applied to bar and \'power__state\' text switches to say "off"-->\n<div class="row column page-header">\n    <h2 class="inline h4">All events generated by the system</h2>\n    <div class="event-log__timezone inline float-right">\n        <ul class="event-log__tz-list inline">\n            <li>User timezone: EDT (UTC-4)</li>\n            <li>UTC Timezone : UTC - 0</li>\n        </ul>\n    </div>\n</div>\n\n<div id="event-filter" class="row">\n    <div class="column large-6">\n        <p class="filter-label">Filter by severity</p>\n        <button class="btn-secondary inline first">High</button>\n        <button class="btn-primary inline">Medium</button>\n        <button class="btn-secondary inline">Low</button>\n        <button class="btn-secondary inline last">Resolved</button>\n    </div>\n    <div class="column large-6">\n        <p class="filter-label">Filter by date range (MM/DD/YYYY)</p>\n    </div>\n</div>\n</div>');
$templateCache.put('overview/controllers/power-operations-controller.html','<div id="power-operations">\n\n    <div class="row column">\n        <h1>Server power operation</h1>\n    </div>\n\n    <!-- Current status and bar display the state of the server. Class \'power__state-off\' is applied to bar and \'power__state\' text switches to say "off"-->\n    <div class="row column">\n        <div class="power__current-status ">\n            <h2 class="inline h4">Current status</h2>\n            <span class="power__status-log inline float-right">Server last reset at {{dataService.last_updated |date:\'h:mm:ss on MM/dd/yyyy\'}}</span>\n        </div>\n    </div>\n    <div class="row column">\n        <div id="power-indicator-bar" class="power__indicator-bar" ng-class="{\'power__state-on\': dataService.server_state == \'Running\', \'power__state-off\': dataService.server_state == \'Off\', \'power__state-indet\': dataService.server_state == \'Quiesced\'}">\n            <p class="inline">{{dataService.server_id}}</p>\n            <h3 class="power__state inline float-right h3"><span>{{dataService.server_state}}</span></h3>\n        </div>\n    </div>\n    <div class="row column">\n        <div class="row column">\n            <h3 class="h4">Select a power operation</h3>\n        </div>\n\n        <!-- Power on displays only when server is shutdown -->\n        <div class="row column power-option" ng-hide="dataService.server_state == \'Running\'" ng-class="{disabled: (confirm && !power_confirm) || dataService.loading, transitionAll: confirm && power_confirm}">\n            <button id="power__power-on" class="btn-secondary" ng-click="togglePower()" role="button">Power On</button>\n            <p>Attempts to power on the server</p>\n\n            <!---<confirm title="power off" message="Power off the server" confirm="power_confirm" ng-show="power_confirm" callback="togglePower"></confirm>-->\n        </div>\n\n        <!-- Power reboot/shutdown options : when server is off all of these are hidden. When one option is selected, the others are disabled. -->\n        <div class="row column power-option" ng-hide="dataService.server_state == \'Off\'" ng-class="{disabled: (confirm && !warmboot_confirm) || dataService.loading, transitionAll: confirm && warmboot_confirm}">\n            <button id="power__warm-boot" class="btn-secondary" ng-click="warmRebootConfirm()" role="button"><i>&#x21BB</i> Warm reboot</button>\n            <p>Attempts to perform an orderly shutdown before restarting the server</p>\n            <confirm title="Warm Reboot" message="perform an orderly shutdown" confirm="warmboot_confirm" ng-show="warmboot_confirm" callback="warmReboot"></confirm>\n        </div>\n        <div class="row column power-option" ng-hide="dataService.server_state == \'Off\'" ng-class="{disabled: (confirm && !coldboot_confirm) || dataService.loading, transitionAll: confirm && coldboot_confirm}">\n            <button id="power__cold-boot" class="btn-secondary" ng-click="coldRebootConfirm()" role="button"><i>&#x21BB</i> Cold reboot</button>\n            <p>Shuts down the server immediately, then restarts it</p>\n            <confirm title="Cold Reboot" message="Shutdown server immediately." confirm="coldboot_confirm" ng-show="coldboot_confirm" cancel="coldbootCancel" callback="coldReboot"></confirm>\n        </div>\n        <div class="row column power-option" ng-hide="dataService.server_state == \'Off\'" ng-class="{disabled: (confirm && !orderly_confirm) || dataService.loading, transitionAll: confirm && orderly_confirm}">\n            <button id="power__soft-shutdown" class="btn-secondary" ng-click="orderlyShutdownConfirm()" role="button"><img src="assets/images/icon-power.svg" />Orderly shutdown</button>\n            <p>Attempts to stop all software on the server before removing power</p>\n            <confirm title="Orderly shutdown" message="Attempts to stop all software orderly." confirm="orderly_confirm" ng-show="orderly_confirm" cancel="orderlyShutdownCancel" callback="orderlyShutdown"></confirm>\n        </div>\n        <div class="row column power-option" ng-hide="dataService.server_state == \'Off\'" ng-class="{disabled: (confirm && !immediately_confirm) || dataService.loading, transitionAll: confirm && immediately_confirm}">\n            <button id="power__hard-shutdown" class="btn-secondary" ng-click="immediateShutdownConfirm()" role="button"><img src="assets/images/icon-power.svg" />Immediate shutdown</button>\n            <p>Removes power from the server without waiting for software to stop</p>\n            <confirm title="Immediate shutdown" message="Removes power from the server immediately." confirm="immediately_confirm" ng-show="immediately_confirm" cancel="immediatelyShutdownCancel" callback="immediateShutdown"></confirm>\n        </div>\n    </div>\n</div>');
$templateCache.put('overview/controllers/system-overview-controller.html','<div class="row column">\n    <h1>System Overview</h1>\n    <p>System overview will be here.</p>\n</div>');
$templateCache.put('overview/controllers/unit-id-controller.html','<div id="uid-switch">\n    <div class="row column">\n        <h1>Unit ID Indicator</h1>\n    </div>\n\n    <div class="row column">\n        <h2 class="h4">Unit ID control</h2>\n    </div>\n\n    <div class="row column">\n        <div class="btm-border-grey">\n            <div class="toggle inline" ng-init="indicatorState = \'off\'">\n                <input id="toggle__switch-round"\n                       class="toggle-switch toggle-switch__round-flat"\n                       type="checkbox"\n                       tabindex="0"\n                       ng-click="indicatorState = { \'on\': \'off\', \'off\':\'on\'}[indicatorState]"\n                       >\n                <label for="toggle__switch-round" tabindex="0">Unit ID indicator is <span class="uid-switch__status">{{indicatorState}}</span></label>\n            </div>\n            <div class="uid-switch__label inline">\n                <p>Unit ID indicator is <span class="uid-switch__status">{{indicatorState}}</span></p>\n                <p>Control unit indicator to identify server unit.</p>\n            </div>\n        </div>\n    </div>\n</div>');}]);
window.angular&&function(angular){"use strict";angular.module("app.vendors",[])}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.constants",[]).constant("AppConstants",{})}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.constants").constant("EnvironmentConstants",{inDevelopmentMode:!0,RestConstants:{},FLASH_MESSAGE:{duration:2e3,classes:{warning:"message-warning",info:"message-info",error:"message-error",success:"message-success"}}})}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.common.services",[])}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.common.services").service("Constants",function(){return{LOGIN_CREDENTIALS:{username:"test",password:"testpass"},API_CREDENTIALS:{host:"https://9.3.164.147"},API_RESPONSE:{ERROR_STATUS:"error",ERROR_MESSAGE:"401 Unauthorized",SUCCESS_STATUS:"ok",SUCCESS_MESSAGE:"200 OK"},CHASSIS_POWER_STATE:{on:"On",off:"Off"},HOST_STATE_TEXT:{on:"Running",off:"Off",booting:"Quiesced",unreachable:"Unreachable"},HOST_STATE:{on:1,off:-1,booting:0,unreachable:-2}}})}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.common.services").service("dataService",["Constants",function(Constants){this.app_version="openBMC V.0.0.1",this.server_health="Error",this.server_state="Unreachable",this.server_status=-2,this.chassis_state="On",this.server_id="Server 9.3.164.147",this.last_updated=new Date,this.loading=!1,this.server_unreachable=!1,this.loading_message="",this.showNavigation=!1,this.bodyStyle={},this.path="",this.setPowerOnState=function(){this.server_state=Constants.HOST_STATE_TEXT.on,this.server_status=Constants.HOST_STATE.on},this.setPowerOffState=function(){this.server_state=Constants.HOST_STATE_TEXT.off,this.server_status=Constants.HOST_STATE.off},this.setBootingState=function(){this.server_state=Constants.HOST_STATE_TEXT.booting,this.server_status=Constants.HOST_STATE.booting},this.setUnreachableState=function(){this.server_state=Constants.HOST_STATE_TEXT.unreachable,this.server_status=Constants.HOST_STATE.unreachable}}])}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.common.services").factory("APIUtils",["$http","Constants",function($http,Constants){var SERVICE={LOGIN_CREDENTIALS:Constants.LOGIN_CREDENTIALS,API_CREDENTIALS:Constants.API_CREDENTIALS,API_RESPONSE:Constants.API_RESPONSE,CHASSIS_POWER_STATE:Constants.CHASSIS_POWER_STATE,HOST_STATE_TEXT:Constants.HOST_STATE,HOST_STATE:Constants.HOST_STATE,getChassisState:function(callback){$http({method:"GET",url:SERVICE.API_CREDENTIALS.host+"/xyz/openbmc_project/state/chassis0",headers:{Accept:"application/json","Content-Type":"application/json"},withCredentials:!0}).success(function(response){var json=JSON.stringify(response),content=JSON.parse(json);callback(content.data.CurrentPowerState)}).error(function(error){})},getHostState:function(callback){$http({method:"GET",url:SERVICE.API_CREDENTIALS.host+"/xyz/openbmc_project/state/host0",headers:{Accept:"application/json","Content-Type":"application/json"},withCredentials:!0}).success(function(response){var json=JSON.stringify(response),content=JSON.parse(json);callback(content.data.CurrentHostState)}).error(function(error){})},login:function(username,password,callback){$http({method:"POST",url:SERVICE.API_CREDENTIALS.host+"/login",headers:{Accept:"application/json","Content-Type":"application/json"},withCredentials:!0,data:JSON.stringify({data:[username,password]})}).success(function(response){callback&&callback(response)}).error(function(error){callback&&callback(null,!0)})},logout:function(callback){$http({method:"POST",url:SERVICE.API_CREDENTIALS.host+"/logout",headers:{Accept:"application/json","Content-Type":"application/json"},withCredentials:!0,data:JSON.stringify({data:[]})}).success(function(response){callback&&callback(response)}).error(function(error){callback&&callback(null,error)})},chassisPowerOn:function(callback){$http({method:"POST",url:SERVICE.API_CREDENTIALS.host+"/xyz/openbmc_project/state/host0",headers:{Accept:"application/json","Content-Type":"application/json"},withCredentials:!0,data:JSON.stringify({data:[]})}).success(function(response){var json=JSON.stringify(response),content=JSON.parse(json);if(callback)return callback(content.data.CurrentPowerState)}).error(function(error){callback&&callback(error)})},chassisPowerOff:function(callback){$http({method:"POST",url:SERVICE.API_CREDENTIALS.host+"/xyz/openbmc_project/state/host0",headers:{Accept:"application/json","Content-Type":"application/json"},withCredentials:!0,data:JSON.stringify({data:[]})}).success(function(response){var json=JSON.stringify(response),content=JSON.parse(json);if(callback)return callback(content.data.CurrentPowerState)}).error(function(error){callback&&callback(error)})},bmcReboot:function(callback){$http({method:"PUT",url:SERVICE.API_CREDENTIALS.host+"/xyz/openbmc_project/state/bmc0/attr/RequestedBmcTransition",headers:{Accept:"application/json","Content-Type":"application/json"},withCredentials:!0,data:JSON.stringify({data:"xyz.openbmc_project.State.BMC.Transition.Reboot"})}).success(function(response){var json=JSON.stringify(response),content=JSON.parse(json);if(callback)return callback(content.status)}).error(function(error){callback&&callback(error)})},hostPowerOn:function(callback){$http({method:"PUT",url:SERVICE.API_CREDENTIALS.host+"/xyz/openbmc_project/state/host0/attr/RequestedHostTransition",headers:{Accept:"application/json","Content-Type":"application/json"},withCredentials:!0,data:JSON.stringify({data:"xyz.openbmc_project.State.Host.Transition.On"})}).success(function(response){var json=JSON.stringify(response),content=JSON.parse(json);if(callback)return callback(content.status)}).error(function(error){callback&&callback(error)})},hostPowerOff:function(callback){$http({method:"PUT",url:SERVICE.API_CREDENTIALS.host+"/xyz/openbmc_project/state/host0/attr/RequestedHostTransition",headers:{Accept:"application/json","Content-Type":"application/json"},withCredentials:!0,data:JSON.stringify({data:"xyz.openbmc_project.State.Host.Transition.Off"})}).success(function(response){var json=JSON.stringify(response),content=JSON.parse(json);if(callback)return callback(content.status)}).error(function(error){callback&&callback(error)})},hostReboot:function(callback){$http({method:"POST",url:SERVICE.API_CREDENTIALS.host+"/xyz/openbmc_project/state/host0",headers:{Accept:"application/json","Content-Type":"application/json"},withCredentials:!0,data:JSON.stringify({data:[]})}).success(function(response){var json=JSON.stringify(response),content=JSON.parse(json);if(callback)return callback(content)}).error(function(error){callback&&callback(error)})},hostShutdown:function(callback){$http({method:"POST",url:SERVICE.API_CREDENTIALS.host+"/xyz/openbmc_project/state/host0",headers:{Accept:"application/json","Content-Type":"application/json"},withCredentials:!0,data:JSON.stringify({data:[]})}).success(function(response){var json=JSON.stringify(response),content=JSON.parse(json);if(callback)return callback(content)}).error(function(error){callback&&callback(error)})}};return SERVICE}])}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.common.services").service("userModel",["APIUtils",function(APIUtils){return{login:function(username,password,callback){APIUtils.login(username,password,function(response,error){response&&response.status==APIUtils.API_RESPONSE.SUCCESS_STATUS?(sessionStorage.setItem("LOGIN_ID",username),callback(!0)):callback(!1,error)})},isLoggedIn:function(){return null!==sessionStorage.getItem("LOGIN_ID")},logout:function(callback){APIUtils.logout(function(response,error){response&&response.status==APIUtils.API_RESPONSE.SUCCESS_STATUS?(sessionStorage.removeItem("LOGIN_ID"),callback(!0)):callback(!1,error)})}}}])}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.common.services").service("apiInterceptor",["$q","$rootScope","dataService",function($q,$rootScope,dataService){return{request:function(config){return dataService.server_unreachable=!1,dataService.loading=!0,config},response:function(response){return dataService.loading=!1,dataService.last_updated=new Date,null==response&&(dataService.server_unreachable=!0),response&&"error"==response.status&&"/login"!=dataService.path&&$rootScope.$emit("timedout-user",{}),response},responseError:function(rejection){return dataService.server_unreachable=!0,dataService.loading=!1,$q.reject(rejection)}}}])}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.common.filters",[])}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.common.directives",["app.common.services"])}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.common.directives").directive("appHeader",["APIUtils",function(APIUtils){return{restrict:"E",templateUrl:"common/directives/app-header.html",scope:{path:"="},controller:["$rootScope","$scope","dataService","userModel","$location",function($rootScope,$scope,dataService,userModel,$location){$scope.dataService=dataService,$scope.loadServerStatus=function(){userModel.isLoggedIn()&&APIUtils.getHostState(function(status){"xyz.openbmc_project.State.Host.HostState.Off"==status?dataService.setPowerOffState():"xyz.openbmc_project.State.Host.HostState.Running"==status?dataService.setPowerOnState():dataService.setBootingState()})},$scope.loadServerStatus(),$scope.logout=function(){userModel.logout(function(status,error){status&&$location.path("/logout")})},$scope.refresh=function(){$scope.loadServerStatus()};var loginListener=$rootScope.$on("user-logged-in",function(event,arg){$scope.loadServerStatus()});$scope.$on("$destroy",function(){loginListener()})}]}}])}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.common.directives").directive("appNavigation",function(){return{restrict:"E",templateUrl:"common/directives/app-navigation.html",scope:{path:"=",showNavigation:"="},controller:["$scope","dataService",function($scope,dataService){$scope.$watch("showNavigation",function(){var paddingTop=0;$scope.firstLevel="overview",$scope.secondLevel="system_overview",$scope.showNavigation&&(paddingTop=document.getElementById("header__wrapper").offsetHeight),dataService.bodyStyle={"padding-top":paddingTop+"px"},$scope.navStyle={top:paddingTop+"px"}})}]}})}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.common.directives").directive("confirm",["$timeout",function($timeout){return{restrict:"E",templateUrl:"common/directives/confirm.html",scope:{title:"@",message:"@",confirm:"=",callback:"="},controller:["$scope",function($scope){$scope.cancel=function(){$scope.confirm=!1,$scope.$parent.confirm=!1},$scope.accept=function(){$scope.callback(),$scope.cancel()}}],link:function(scope,e){scope.$watch("confirm",function(){scope.confirm?$timeout(function(){angular.element(e[0].parentNode).css({"min-height":e[0].querySelector(".inline__confirm").offsetHeight+"px"})},0):angular.element(e[0].parentNode).css({"min-height":"0px"})})}}}])}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.login",["ngRoute","app.constants","app.common.services"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/login",{templateUrl:"login/controllers/login-controller.html",controller:"LoginController",authenticated:!1})}])}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.login").controller("LoginController",["$scope","$window","APIUtils","dataService","userModel",function($scope,$window,APIUtils,dataService,userModel){$scope.dataService=dataService,$scope.tryLogin=function(username,password,event){13===event.keyCode&&$scope.login(username,password)},$scope.login=function(username,password){return $scope.error=!1,!(!username||""==username||!password||""==password)&&void userModel.login(username,password,function(status,unreachable){status?($scope.$emit("user-logged-in",{}),$window.location.hash="#/system-overview"):unreachable||($scope.error=!0)})}}])}(angular);
window.angular&&function(angular){"use strict";angular.module("app.overview",["ngRoute","app.constants","app.common.services"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/overview/bmc-reboot",{templateUrl:"overview/controllers/bmc-reboot-controller.html",controller:"bmcRebootController",authenticated:!0}).when("/overview/log",{templateUrl:"overview/controllers/log-controller.html",controller:"logController",authenticated:!0}).when("/overview/power-operations",{templateUrl:"overview/controllers/power-operations-controller.html",controller:"powerOperationsController",authenticated:!0}).when("/overview/unit-id",{templateUrl:"overview/controllers/unit-id-controller.html",controller:"unitIdController",authenticated:!0}).when("/overview/system",{templateUrl:"overview/controllers/system-overview-controller.html",controller:"systemOverviewController",authenticated:!0})}])}(window.angular);
window.angular&&function(angular){"use strict";angular.module("app.overview").controller("bmcRebootController",["$scope","$window","APIUtils","dataService",function($scope,$window,APIUtils,dataService){$scope.dataService=dataService,$scope.confirm=!1,$scope.rebootConfirm=function(){$scope.confirm||($scope.confirm=!0)},$scope.reboot=function(){dataService.setBootingState(),APIUtils.bmcReboot(function(response){response?dataService.setPowerOnState():dataService.setUnreachableState()})}}])}(angular);
window.angular&&function(angular){"use strict";angular.module("app.overview").controller("powerOperationsController",["$scope","APIUtils","dataService","$timeout",function($scope,APIUtils,dataService,$timeout){$scope.dataService=dataService,$scope.confirm=!1,$scope.power_confirm=!1,$scope.warmboot_confirm=!1,$scope.coldboot_confirm=!1,$scope.orderly_confirm=!1,$scope.immediately_confirm=!1,$scope.toggleState=function(){dataService.server_state="Running"==dataService.server_state?"Off":"Running"},$scope.togglePower=function(){var method="Running"==dataService.server_state?"hostPowerOff":"hostPowerOn";APIUtils[method](function(response){null==response||("Running"==dataService.server_state?dataService.setPowerOffState():dataService.setPowerOnState())})},$scope.powerOnConfirm=function(){$scope.confirm||($scope.confirm=!0,$scope.power_confirm=!0)},$scope.warmReboot=function(){dataService.setBootingState(),APIUtils.hostPowerOff(function(response){response&&APIUtils.hostPowerOn(function(response){response&&dataService.setPowerOnState()})})},$scope.testState=function(){$timeout(function(){dataService.setPowerOffState(),$timeout(function(){dataService.setPowerOnState()},2e3)},1e3)},$scope.warmRebootConfirm=function(){$scope.confirm||($scope.confirm=!0,$scope.warmboot_confirm=!0)},$scope.coldReboot=function(){$scope.warmReboot()},$scope.coldRebootConfirm=function(){$scope.confirm||($scope.confirm=!0,$scope.coldboot_confirm=!0)},$scope.orderlyShutdown=function(){APIUtils.hostPowerOff(function(response){response&&dataService.setPowerOffState()})},$scope.orderlyShutdownConfirm=function(){$scope.confirm||($scope.confirm=!0,$scope.orderly_confirm=!0)},$scope.immediateShutdown=function(){$scope.orderlyShutdown()},$scope.immediateShutdownConfirm=function(){$scope.confirm||($scope.confirm=!0,$scope.immediately_confirm=!0)}}])}(angular);
window.angular&&function(angular){"use strict";angular.module("app.overview").controller("systemOverviewController",["$scope","$window","APIUtils","dataService",function($scope,$window,APIUtils,dataService,userModel){$scope.dataService=dataService}])}(angular);
window.angular&&function(angular){"use strict";angular.module("app.overview").controller("unitIdController",["$scope","$window","APIUtils","dataService",function($scope,$window,APIUtils,dataService,userModel){$scope.dataService=dataService}])}(angular);
window.angular&&function(angular){"use strict";angular.module("app.overview").controller("logController",["$scope","$window","APIUtils","dataService",function($scope,$window,APIUtils,dataService,userModel){$scope.dataService=dataService}])}(angular);